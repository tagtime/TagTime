# Settings for TagTime.
# This file must be in your home directory, called .tagtimerc
# NB: restart the daemon (tagtimed.pl) if you change this file.

$usr = "__USER__";   # CHANGEME to your username
$path = "__PATH__";  # CHANGEME to your path to tagtime
        if($path !~ /\/$/) { $path.="/"; }
$logf = "$path$usr.log";  # log file for pings

$remote_key = "id_tagtime"; # CHANGEME to the file contaning your tagtime key (if different)
$remote_user = "tagtime"; # CHANGEME to your backup user (if different)
$remote_host = "__REMHOST__"; # CHANGEME to your backup server
$remote_path = "__REMPATH__"; # CHANGEME to the path on your backup server
               if($remote_path !~ /\/$/) { $remote_path.="/"; }
$remote_id = ""; # CHANGEME to a unique tag for this machine on the backup server
                 # Leaving this blank will disable backup functionality

# If you're using windows, you'll need cygwin and to set this flag to 1:
$cygwin = __CYGWIN__;  # CHANGEME to 1 if you're using windows/cygwin.

$ED = "__ED__ +";  # CHANGEME if you don't like vi (eg: /usr/bin/pico)
$XT = "__XT__";    # CHANGEME to your path to xterm

# Get your personal Beeminder auth token (after signing in) from
#   https://www.beeminder.com/api/v1/auth_token.json
$beemauth = "abc123";  # CHANGEME to your personal beeminder auth token

# WARNING WARNING WARNING: 
#   if you point this at a beeminder goal with data that was not generated from
#   this tagtime log, it will DELETE ALL OF YOUR DATA
# CHANGEME by adding entries for each beeminder graph you want to auto-update:
%beeminder = (
  #"alice/work" => "job",  # all "job" pings get added to bmndr.com/alice/work
  #"bob/play" => ["fun","whee"], # pings w/ "fun" and/or "whee" sent to bob/play

  # ADVANCED USAGE: regular expressions
  # pings tagged like "eat1", "eat2", "eat3" get added to carol/food:
  #"carol/food" => qr/\beat\d+\b/,

  # ADVANCED USAGE: plug-in functions
  # pings tagged anything except "afk" get added to "dan/nafk":
  #"dan/nafk" => sub { return shift() !~ /\bafk\b/; }
  # pings tagged "workout" get added to dave/tueworkouts, but only on tuesdays:
  #"dave/tueworkouts" => sub { my @now = localtime();
  # return shift() =~/\bworkout\b/ && $now[6] == 2;
  #}
);

# Pings from more than this many seconds ago get autologged with tags "afk" and 
# "RETRO". (Pings can be overdue either because the computer was off or tagtime 
# was waiting for you to answer a previous ping. If the computer was off, the 
# tag "off" is also added.)
$retrothresh = 60;

# If you want the universal ping schedule, don't touch these 3 settings...
$gap = 45*60; # Average number of seconds between pings (eg, 60*60 = 1 hour).
$URPING = 1184097393; # Ur-ping, ie, the birth of timepie/tagtime! (unixtime)
$seed = 11193462;

$linelen = 79; # Try to keep log lines at most this long.

$catchup = 0;  # Whether it beeps for old pings, ie, should it beep a bunch
               # of times in a row when the computer wakes from sleep.

$enforcenums = 0;  # Whether it forces you to include a number in your
                   # ping response (include tag non or nonXX where XX is day 
                   # of month to override). This is for task editor integration.

# System command that will play a sound for pings.
# Often "play" or "playsound" on Linux, or "afplay" on Mac osx.
# $playsound = "afplay ${path}sound/blip-twang.wav";
# $playsound = "echo -e '\a'"; # this is the default if $playsound not defined.
# $playsound = "";  # makes tagtime stay quiet.


1; # When requiring a library in perl it has to return 1.
